// Generated by CoffeeScript 1.9.3
(function() {
  var exit;

  exports.err404 = function(req, res, next) {
    var err;
    err = new Error('Not Found');
    err.status = 404;
    return next(err);
  };

  exports.errHandler = function(errGetter) {
    return function(err, req, res, next) {
      res.status = err.status || 500;
      return res.render('error', {
        message: err.message,
        error: errGetter(err)
      });
    };
  };

  exports.devErrHandler = exports.errHandler(function(_) {
    return _;
  });

  exports.prodErrHandler = exports.errHandler(function(_) {
    return {};
  });

  exports.normalizePort = function(val) {
    var port;
    port = parseInt(val, 10);
    if (isNaN(port)) {
      return val;
    }
    if (port >= 0) {
      return port;
    }
    return false;
  };

  exports.serverOnError = function(app) {
    return function(error) {
      var bind;
      if (error.syscall !== 'listen') {
        throw error;
      }
      bind = (typeof app.get('port' === 'string') ? 'Pipe ' : 'Port ') + port;
      switch (error.code) {
        case 'EACCES':
          return exit(bind + " requires elevated privileges");
        case 'EADDRINUSE':
          return exit(bind + " is already in use");
        default:
          throw error;
      }
    };
  };

  exports.serverOnListening = function(server, debug) {
    return function() {
      var addr, bind;
      addr = server.address();
      bind = typeof server.address() === 'string' ? 'pipe ' + addr : 'port ' + server.address().port;
      return debug("Listening  on " + bind);
    };
  };

  exit = function(msg) {
    console.error(msg);
    return process.exit(1);
  };

}).call(this);

//# sourceMappingURL=predef.js.map
